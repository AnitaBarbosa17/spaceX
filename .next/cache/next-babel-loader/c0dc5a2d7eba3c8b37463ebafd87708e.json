{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { withApollo } from '../apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_LAUNCHES } from '../graphql/get-launches';\nimport CardLaunch from '../components/CardLaunch';\nimport styled from 'styled-components';\nimport Masonry from 'react-masonry-css';\nimport Pagination from '../components/Pagination';\n\nvar LaunchesContainer = function LaunchesContainer() {\n  var _useState = useState(1),\n      currentPage = _useState[0],\n      setCurrentPage = _useState[1];\n\n  var _useState2 = useState(12),\n      cardPerPage = _useState2[0];\n\n  var _useQuery = useQuery(GET_LAUNCHES, {\n    variables: {\n      limit: 36\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"Error...\");else console.log(data); //Get current post\n\n  var indexOfLastPost = currentPage * cardPerPage;\n  var indexOfFirstPost = indexOfLastPost - cardPerPage;\n  var currentCard = data.launchesPast.slice(indexOfFirstPost, indexOfLastPost);\n\n  var paginate = function paginate(pageNumber) {\n    return setCurrentPage(pageNumber);\n  };\n\n  return __jsx(CardsContainer, null, currentCard.map(function (launch) {\n    return __jsx(CardLaunch, {\n      key: launch.mission_name,\n      launch: launch,\n      className: \"mr\",\n      loading: loading\n    });\n  }), __jsx(Pagination, {\n    cardPerPage: cardPerPage,\n    totalCards: data.launchesPast.length,\n    paginate: paginate,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage\n  }));\n};\n\nvar CardsContainer = styled.div.withConfig({\n  displayName: \"LaunchesContainer__CardsContainer\",\n  componentId: \"y2fqff-0\"\n})([\"display:flex;flex-wrap:wrap;justify-content:center;width:85%;margin:0 auto;padding:7vh 0;\"]);\nexport default withApollo({\n  ssr: true\n})(LaunchesContainer);","map":null,"metadata":{},"sourceType":"module"}