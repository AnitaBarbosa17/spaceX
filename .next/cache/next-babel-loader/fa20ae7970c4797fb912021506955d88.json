{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport { withApollo } from '../apollo';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_LAUNCHES } from '../graphql/get-launches';\nimport CardLaunch from '../components/CardLaunch';\nimport styled from 'styled-components';\nimport Masonry from 'react-masonry-css';\nimport Pagination from '../components/Pagination';\n\nconst LaunchesContainer = () => {\n  const {\n    0: currentPage,\n    1: setCurrentPage\n  } = useState(1);\n  const {\n    0: cardPerPage\n  } = useState(12);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LAUNCHES, {\n    variables: {\n      limit: 36\n    }\n  });\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"Error...\");else console.log(data); //Get current post\n\n  const indexOfLastPost = currentPage * cardPerPage;\n  const indexOfFirstPost = indexOfLastPost - cardPerPage;\n  const currentCard = data.launchesPast.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return __jsx(CardsContainer, null, currentCard.map(launch => __jsx(CardLaunch, {\n    key: launch.mission_name,\n    launch: launch,\n    className: \"mr\",\n    loading: loading\n  })), __jsx(Pagination, {\n    cardPerPage: cardPerPage,\n    totalCards: data.launchesPast.length,\n    paginate: paginate,\n    currentPage: currentPage,\n    setCurrentPage: setCurrentPage\n  }));\n};\n\nconst CardsContainer = styled.div.withConfig({\n  displayName: \"LaunchesContainer__CardsContainer\",\n  componentId: \"y2fqff-0\"\n})([\"display:flex;flex-wrap:wrap;justify-content:center;width:85%;margin:0 auto;padding:7vh 0;\"]);\nexport default withApollo({\n  ssr: true\n})(LaunchesContainer);","map":null,"metadata":{},"sourceType":"module"}