{"ast":null,"code":"import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport fetch from 'isomorphic-unfetch';\nexport default function createApolloClient(initialState, ctx) {\n  // The `ctx` (NextPageContext) will only be present on the server.\n  // use it to extract auth headers (ctx.req) or similar.\n  return new ApolloClient({\n    ssrMode: Boolean(ctx),\n    link: new HttpLink({\n      uri: 'https://api.spacex.land/graphql/',\n      // Server URL (must be absolute)\n      credentials: 'same-origin',\n      // Additional fetch() options like `credentials` or `headers`\n      fetch: fetch\n    }),\n    cache: new InMemoryCache().restore(initialState)\n  });\n} // import {ApolloClient, InMemoryCache, } from 'apollo-boost';\n// import { createHttpLink } from 'apollo-link-http'; \n// const client = new ApolloClient({\n//     link: createHttpLink({\n//         uri: 'https://api.spacex.land/graphql/'\n//     }),\n//     cache: new InMemoryCache()\n// });\n// export default client;","map":null,"metadata":{},"sourceType":"module"}