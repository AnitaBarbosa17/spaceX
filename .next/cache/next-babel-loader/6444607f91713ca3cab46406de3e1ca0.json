{"ast":null,"code":"var _jsxFileName = \"/Users/abarbosa/Universe/ESCUELA_JS/react/router-yema/src/containers/LaunchesContainer.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_LAUNCHES } from '../graphql/get-launches';\nimport { LaunchPast } from '../components/LaunchPast';\nexport function LaunchesContainer() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LAUNCHES, {\n    variables: {\n      limit: 12\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 24\n    }\n  }, \"Loading...\");else // console.log(data)\n    return __jsx(\"div\", {\n      className: \"container mx-auto px-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, data.launchesPast.map(launch => __jsx(LaunchPast, {\n      key: launch.mission_name,\n      launch: launch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 50\n      }\n    }))));\n}","map":{"version":3,"sources":["/Users/abarbosa/Universe/ESCUELA_JS/react/router-yema/src/containers/LaunchesContainer.js"],"names":["React","useQuery","GET_LAUNCHES","LaunchPast","LaunchesContainer","loading","error","data","variables","limit","launchesPast","map","launch","mission_name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAChC,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBN,QAAQ,CAACC,YAAD,EAAe;AAClDM,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AADuC,GAAf,CAAvC;AAKA,MAAGJ,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP,CAAZ,KAEA;AACA,WACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKE,IAAI,CAACG,YAAL,CAAkBC,GAAlB,CAAsBC,MAAM,IAAI,MAAC,UAAD;AAAY,MAAA,GAAG,EAAEA,MAAM,CAACC,YAAxB;AAAsC,MAAA,MAAM,EAAED,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhC,CADL,CADJ,CADJ;AAQH","sourcesContent":["import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_LAUNCHES } from '../graphql/get-launches';\nimport { LaunchPast } from '../components/LaunchPast';\n\nexport function LaunchesContainer() {\n    const {loading, error, data} = useQuery(GET_LAUNCHES, {\n        variables: { limit: 12 }\n    });\n    \n\n    if(loading) return <p>Loading...</p>\n    else\n    // console.log(data)\n    return (\n        <div className=\"container mx-auto px-10\">\n            <div className=\"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-4\">\n                {data.launchesPast.map(launch => <LaunchPast key={launch.mission_name} launch={launch} />)}\n            </div>\n        </div>\n    )\n    \n}"]},"metadata":{},"sourceType":"module"}