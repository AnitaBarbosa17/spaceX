{"ast":null,"code":"var _jsxFileName = \"/Users/abarbosa/Universe/ESCUELA_JS/react/router-yema/src/pages/about.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_LAUNCHES } from '../graphql/get-launches';\n\nconst About = () => {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_LAUNCHES, {\n    variables: {\n      limit: 12\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 24\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 22\n    }\n  }, \"Error...\");else console.log(data);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(NavBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }\n  }), __jsx(\"div\", {\n    className: \"container mx-auto px-10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"About\"), __jsx(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, data.company.name)));\n};\n\nexport default About;","map":{"version":3,"sources":["/Users/abarbosa/Universe/ESCUELA_JS/react/router-yema/src/pages/about.js"],"names":["useQuery","GET_LAUNCHES","About","loading","error","data","variables","limit","console","log","company","name"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,MAAyBL,QAAQ,CAACC,YAAD,EAAe;AAClDK,IAAAA,SAAS,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AADuC,GAAf,CAAvC;AAIA,MAAGJ,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACZ,MAAGC,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP,CAAV,KAEAI,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,EAEI;AAAK,IAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAK,IAAA,SAAS,EAAC,sDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,IAAI,CAACK,OAAL,CAAaC,IADlB,CAFJ,CAFJ,CADJ;AAYH,CArBD;;AAuBA,eAAeT,KAAf","sourcesContent":["import { useQuery } from '@apollo/react-hooks';\nimport { GET_LAUNCHES } from '../graphql/get-launches';\n\nconst About = () => {\n    const {loading, error, data} = useQuery(GET_LAUNCHES, {\n        variables: { limit: 12 }\n    });\n\n    if(loading) return <p>Loading...</p>\n    if(error) return <p>Error...</p>\n    else\n    console.log(data)\n    return (\n        <div>\n             <NavBar />\n            <div className=\"container mx-auto px-10\">\n                <h1>About</h1>\n                <div className=\"grid grid-cols-1 sm:grid-cols-3 lg:grid-cols-4 gap-4\">\n                    {data.company.name}\n                </div>\n            </div>\n        </div>\n        \n    )\n}\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}