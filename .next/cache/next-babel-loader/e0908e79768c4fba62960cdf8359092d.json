{"ast":null,"code":"const createPagination = params => {\n  const {\n    numberOfArticles,\n    articlesPerPage,\n    currentPage,\n    numberOfButtons\n  } = params;\n  const numberOfPages = Math.ceil(numberOfArticles / articlesPerPage);\n  if (currentPage > numberOfPages || currentPage < 1) return {\n    pagination: [],\n    currentPage\n  };\n  const buttons = Array(numberOfPages).fill(1).map((e, i) => e + i);\n  const sideButtons = numberOfButtons % 2 === 0 ? numberOfButtons / 2 : (numberOfButtons - 1) / 2;\n\n  const calculLeft = (rest = 0) => {\n    return {\n      array: buttons.slice(0, currentPage - 1).reverse().slice(0, sideButtons + rest).reverse(),\n      rest: function () {\n        return sideButtons - this.array.length;\n      }\n    };\n  };\n\n  const calculRight = (rest = 0) => {\n    return {\n      array: buttons.slice(currentPage).slice(0, sideButtons + rest),\n      rest: function () {\n        return sideButtons - this.array.length;\n      }\n    };\n  };\n\n  const leftButtons = calculLeft(calculRight().rest()).array;\n  const rightButtons = calculRight(calculLeft().rest()).array;\n  return {\n    pagination: [...leftButtons, currentPage, ...rightButtons],\n    currentPage\n  };\n};\n\nexport default createPagination;","map":{"version":3,"sources":["/Users/abarbosa/Universe/ESCUELA_JS/react/router-yema/src/helpers/createPagination.js"],"names":["createPagination","params","numberOfArticles","articlesPerPage","currentPage","numberOfButtons","numberOfPages","Math","ceil","pagination","buttons","Array","fill","map","e","i","sideButtons","calculLeft","rest","array","slice","reverse","length","calculRight","leftButtons","rightButtons"],"mappings":"AAAA,MAAMA,gBAAgB,GAAGC,MAAM,IAAI;AAC/B,QAAM;AACFC,IAAAA,gBADE;AAEFC,IAAAA,eAFE;AAGFC,IAAAA,WAHE;AAIFC,IAAAA;AAJE,MAKFJ,MALJ;AAOA,QAAMK,aAAa,GAAGC,IAAI,CAACC,IAAL,CAAUN,gBAAgB,GAAGC,eAA7B,CAAtB;AAEA,MAAIC,WAAW,GAAGE,aAAd,IAA+BF,WAAW,GAAG,CAAjD,EACI,OAAO;AACHK,IAAAA,UAAU,EAAE,EADT;AAEHL,IAAAA;AAFG,GAAP;AAKJ,QAAMM,OAAO,GAAGC,KAAK,CAACL,aAAD,CAAL,CACXM,IADW,CACN,CADM,EAEXC,GAFW,CAEP,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAFP,CAAhB;AAGA,QAAMC,WAAW,GACbX,eAAe,GAAG,CAAlB,KAAwB,CAAxB,GAA4BA,eAAe,GAAG,CAA9C,GAAkD,CAACA,eAAe,GAAG,CAAnB,IAAwB,CAD9E;;AAGA,QAAMY,UAAU,GAAG,CAACC,IAAI,GAAG,CAAR,KAAc;AAC7B,WAAO;AACHC,MAAAA,KAAK,EAAET,OAAO,CACTU,KADE,CACI,CADJ,EACOhB,WAAW,GAAG,CADrB,EAEFiB,OAFE,GAGFD,KAHE,CAGI,CAHJ,EAGOJ,WAAW,GAAGE,IAHrB,EAIFG,OAJE,EADJ;AAMHH,MAAAA,IAAI,EAAE,YAAW;AACb,eAAOF,WAAW,GAAG,KAAKG,KAAL,CAAWG,MAAhC;AACH;AARE,KAAP;AAUH,GAXD;;AAaA,QAAMC,WAAW,GAAG,CAACL,IAAI,GAAG,CAAR,KAAc;AAC9B,WAAO;AACHC,MAAAA,KAAK,EAAET,OAAO,CAACU,KAAR,CAAchB,WAAd,EAA2BgB,KAA3B,CAAiC,CAAjC,EAAoCJ,WAAW,GAAGE,IAAlD,CADJ;AAEHA,MAAAA,IAAI,EAAE,YAAW;AACb,eAAOF,WAAW,GAAG,KAAKG,KAAL,CAAWG,MAAhC;AACH;AAJE,KAAP;AAMH,GAPD;;AASA,QAAME,WAAW,GAAGP,UAAU,CAACM,WAAW,GAAGL,IAAd,EAAD,CAAV,CAAiCC,KAArD;AACA,QAAMM,YAAY,GAAGF,WAAW,CAACN,UAAU,GAAGC,IAAb,EAAD,CAAX,CAAiCC,KAAtD;AAEA,SAAO;AACHV,IAAAA,UAAU,EAAE,CAAC,GAAGe,WAAJ,EAAiBpB,WAAjB,EAA8B,GAAGqB,YAAjC,CADT;AAECrB,IAAAA;AAFD,GAAP;AAIC,CAnDL;;AAqDA,eAAeJ,gBAAf","sourcesContent":["const createPagination = params => {\n    const {\n        numberOfArticles,\n        articlesPerPage,\n        currentPage,\n        numberOfButtons\n    } = params;\n\n    const numberOfPages = Math.ceil(numberOfArticles / articlesPerPage);\n\n    if (currentPage > numberOfPages || currentPage < 1)\n        return {\n            pagination: [],\n            currentPage\n        };\n\n    const buttons = Array(numberOfPages)\n        .fill(1)\n        .map((e, i) => e + i);\n    const sideButtons =\n        numberOfButtons % 2 === 0 ? numberOfButtons / 2 : (numberOfButtons - 1) / 2;\n\n    const calculLeft = (rest = 0) => {\n        return {\n            array: buttons\n                .slice(0, currentPage - 1)\n                .reverse()\n                .slice(0, sideButtons + rest)\n                .reverse(),\n            rest: function() {\n                return sideButtons - this.array.length;\n            }\n        };\n    };\n\n    const calculRight = (rest = 0) => {\n        return {\n            array: buttons.slice(currentPage).slice(0, sideButtons + rest),\n            rest: function() {\n                return sideButtons - this.array.length;\n            }\n        };\n    };\n\n    const leftButtons = calculLeft(calculRight().rest()).array;\n    const rightButtons = calculRight(calculLeft().rest()).array;\n\n    return {\n        pagination: [...leftButtons, currentPage, ...rightButtons],\n            currentPage\n        };\n    };\n\nexport default createPagination;\n"]},"metadata":{},"sourceType":"module"}